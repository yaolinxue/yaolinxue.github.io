import{_ as p,o as e,c as k,a6 as h,g as l,w as t,a as n,f as i,L as r}from"./chunks/framework.BkI9ovSD.js";const d="/assets/197.1PJIj48A.png",E="/assets/198.DVcaQWsE.png",o="/assets/018.DJHVdNgh.png",g="/assets/020.Cmi4hCBQ.png",y="/assets/019.zK6Qh9h-.png",c="/assets/200.B4_50eLR.png",L=JSON.parse('{"title":"数据库操作","description":"","frontmatter":{"title":"数据库操作","date":"2020-05-20T00:00:00.000Z","tags":["MySQL"],"categories":["MySQL"]},"headers":[],"relativePath":"blog/MySQL/数据库操作.md","filePath":"blog/MySQL/数据库操作.md","lastUpdated":1746603753000}'),u={name:"blog/MySQL/数据库操作.md"};function F(A,s,D,b,C,m){const a=r("font");return e(),k("div",{"data-pagefind-body":!0},[s[5]||(s[5]=h('<h1 id="数据库操作" tabindex="-1">数据库操作 <a class="header-anchor" href="#数据库操作" aria-label="Permalink to &quot;数据库操作&quot;">​</a></h1><h2 id="一、结构化查询语句分类" tabindex="-1">一、结构化查询语句分类 <a class="header-anchor" href="#一、结构化查询语句分类" aria-label="Permalink to &quot;一、结构化查询语句分类&quot;">​</a></h2><p><img src="'+d+'" alt=""></p><h2 id="二、数据库操作" tabindex="-1">二、数据库操作 <a class="header-anchor" href="#二、数据库操作" aria-label="Permalink to &quot;二、数据库操作&quot;">​</a></h2><h3 id="_1、命令行操作数据库" tabindex="-1">1、命令行操作数据库 <a class="header-anchor" href="#_1、命令行操作数据库" aria-label="Permalink to &quot;1、命令行操作数据库&quot;">​</a></h3><p>创建数据库：create database [if not exists] 数据库名;</p><p>删除数据库：drop database [if exists] 数据库名;</p><p>查看数据库：show databases;</p><p>查看当前使用的数据库：select database();</p><p>使用数据库：use 数据库名;</p><h3 id="_2、对比工具操作数据库" tabindex="-1">2、对比工具操作数据库 <a class="header-anchor" href="#_2、对比工具操作数据库" aria-label="Permalink to &quot;2、对比工具操作数据库&quot;">​</a></h3><p><strong>学习方法：</strong></p><ul><li>对照 SQLyog 工具自动生成的语句学习</li><li>固定语法中的单词需要记忆</li></ul><p><img src="'+E+'" alt=""></p><h2 id="三、创建数据表" tabindex="-1">三、创建数据表 <a class="header-anchor" href="#三、创建数据表" aria-label="Permalink to &quot;三、创建数据表&quot;">​</a></h2><p>属于 DDL（<strong>数据库模式定义语言 Data Definition Language</strong>）的一种，语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [if not exists] </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`表名`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   `字段名1`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 列类型 [属性][索引][注释],</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   `字段名2`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 列类型 [属性][索引][注释],</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  #...</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   `字段名n`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 列类型 [属性][索引][注释]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[表类型][表字符集][注释];</span></span></code></pre></div><p><strong>说明 :</strong> 反引号用于区别 MySQL 保留字与普通字符而引入的（键盘esc下面的键）</p><h2 id="四、数据值和列类型" tabindex="-1">四、数据值和列类型 <a class="header-anchor" href="#四、数据值和列类型" aria-label="Permalink to &quot;四、数据值和列类型&quot;">​</a></h2><p>列类型：规定数据库中该列存放的数据类型</p><h3 id="_1、数值型与浮点型" tabindex="-1">1、数值型与浮点型 <a class="header-anchor" href="#_1、数值型与浮点型" aria-label="Permalink to &quot;1、数值型与浮点型&quot;">​</a></h3><p><img src="'+o+'" alt=""></p><p>double 的使用格式：<strong>字段名 double(总长度,小数点后保留的位数)</strong></p><h3 id="_2、字符串型" tabindex="-1">2、字符串型 <a class="header-anchor" href="#_2、字符串型" aria-label="Permalink to &quot;2、字符串型&quot;">​</a></h3><p><img src="'+g+'" alt=""></p><p>char 是定长字符串：</p><ul><li>优点：存储性能高</li><li>缺点：浪费空间</li><li>eg ： name char(10) 如果存储的数据字符个数不足10个，也会占10个的空间</li></ul><p>varchar 是 变长字符串：</p><ul><li>优点：节约空间</li><li>缺点：存储性能低（因为要先处理长度，而不是直接存储）</li><li>eg ： name varchar(10) 如果存储的数据字符个数不足10个，那就数据字符个数是几就占几个的空间</li></ul><h3 id="_3、日期和时间型" tabindex="-1">3、日期和时间型 <a class="header-anchor" href="#_3、日期和时间型" aria-label="Permalink to &quot;3、日期和时间型&quot;">​</a></h3><p><img src="'+y+'" alt=""></p><h3 id="_4、null值" tabindex="-1">4、NULL值 <a class="header-anchor" href="#_4、null值" aria-label="Permalink to &quot;4、NULL值&quot;">​</a></h3><ul><li>理解为 &quot;没有值&quot; 或 &quot;未知值&quot;</li><li>不要用NULL进行算术运算，因为结果仍会为NULL</li></ul><h2 id="五、数据字段的属性" tabindex="-1">五、数据字段的属性 <a class="header-anchor" href="#五、数据字段的属性" aria-label="Permalink to &quot;五、数据字段的属性&quot;">​</a></h2>',34)),l(a,{color:"red"},{default:t(()=>s[0]||(s[0]=[n("**UnSigned**")])),_:1}),s[6]||(s[6]=i("ul",null,[i("li",null,"无符号的"),i("li",null,"声明该数据列不允许负数")],-1)),l(a,{color:"red"},{default:t(()=>s[1]||(s[1]=[n("**ZEROFILL**")])),_:1}),s[7]||(s[7]=i("ul",null,[i("li",null,"0 填充的"),i("li",null,"不足位数的用0来填充 , 如int(3),5则为005")],-1)),l(a,{color:"red"},{default:t(()=>s[2]||(s[2]=[n("**Auto_InCrement**")])),_:1}),s[8]||(s[8]=h("<ul><li><p>自动增长的，每添加一条数据，自动在上一个记录数上加 1（默认）</p></li><li><p>通常用于设置<strong>主键</strong> ，且为整数类型</p></li><li><p>可定义起始值和步长</p><ul><li><p>当前表设置步长(AUTO_INCREMENT=100)：只影响当前表</p></li><li><p>SET @@auto_increment_increment=5 ; 影响所有使用自增的表(全局)</p></li></ul></li></ul>",1)),l(a,{color:"red"},{default:t(()=>s[3]||(s[3]=[n("**NULL 和 NOT NULL**")])),_:1}),s[9]||(s[9]=i("ul",null,[i("li",null,"默认为NULL，即没有插入该列的数值"),i("li",null,"如果设置为NOT NULL , 则该列必须有值")],-1)),l(a,{color:"red"},{default:t(()=>s[4]||(s[4]=[n("**DEFAULT**")])),_:1}),s[10]||(s[10]=h(`<ul><li>默认的</li><li>用于设置默认值</li><li>例如，性别字段，默认为&quot;男&quot;，否则为 &quot;女&quot;；若无指定该列的值，则默认值为&quot;男&quot;的值</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 目标 : 创建一个school数据库</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 创建学生表(列,字段)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 学号int 登录密码varchar(20) 姓名,性别varchar(2),出生日期(datatime),家庭住址,email</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 创建表之前 , 一定要先选择数据库</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> EXISTS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`student\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`id\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AUTO_INCREMENT COMMENT </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;学号&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`name\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DEFAULT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;匿名&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COMMENT </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;姓名&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`pwd\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DEFAULT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;123456&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COMMENT </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;密码&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`sex\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DEFAULT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;男&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COMMENT </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;性别&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`birthday\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> datetime</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DEFAULT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COMMENT </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;生日&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`address\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFAULT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COMMENT </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;地址&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`email\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFAULT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COMMENT </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;邮箱&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`id\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ENGINE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">InnoDB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CHARSET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">utf8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 显示CREATE DATABASE创建命名数据库的语句</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> school;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 显示CREATE TABLE创建命名数据表的语句。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 显示表结构</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DESC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 设置严格检查模式(不能容错了)SET sql_mode=&#39;STRICT_TRANS_TABLES&#39;;</span></span></code></pre></div><h2 id="六、数据表的类型" tabindex="-1">六、数据表的类型 <a class="header-anchor" href="#六、数据表的类型" aria-label="Permalink to &quot;六、数据表的类型&quot;">​</a></h2><h3 id="_1、设置数据表的类型" tabindex="-1">1、设置数据表的类型 <a class="header-anchor" href="#_1、设置数据表的类型" aria-label="Permalink to &quot;1、设置数据表的类型&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 表名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   -- 省略一些代码</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   -- Mysql注释</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   -- 1. # 单行注释</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   -- 2. /*...*/ 多行注释</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)ENGINE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MyISAM (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">or</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> InnoDB)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 查看mysql所支持的引擎类型 (表类型)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHOW ENGINES;</span></span></code></pre></div><p>MySQL的数据表的类型 : <strong>MyISAM</strong> , <strong>InnoDB</strong> , HEAP , BOB , CSV 等...</p><p>常用的 MyISAM 与 InnoDB 类型：</p><table tabindex="0"><thead><tr><th>名称</th><th>MyISAM</th><th>InnoDB</th></tr></thead><tbody><tr><td>事务处理</td><td>不支持</td><td>支持</td></tr><tr><td>数据行锁定</td><td>不支持</td><td>支持</td></tr><tr><td>外键约束</td><td>不支持</td><td>支持</td></tr><tr><td>全文索引</td><td>支持</td><td>不支持</td></tr><tr><td>表空间大小</td><td>较小</td><td>较大，约 2 倍！</td></tr></tbody></table><p>经验 ( 适用场合 ) ：</p><ul><li>适用 MyISAM：节约空间及相应速度</li><li>适用 InnoDB：安全性 , 事务处理及多用户操作数据表</li></ul><h3 id="_2、数据表的存储位置" tabindex="-1">2、数据表的存储位置 <a class="header-anchor" href="#_2、数据表的存储位置" aria-label="Permalink to &quot;2、数据表的存储位置&quot;">​</a></h3><ul><li><p>MySQL数据表以文件方式存放在磁盘中</p><ul><li><p>包括表文件，数据文件，以及数据库的选项文件</p></li><li><p>位置：Mysql安装目录 \\data\\ 下存放数据表。目录名对应数据库名，该目录下文件名对应数据表</p></li></ul></li><li><p>注意 :</p><ul><li><p>* . frm -- 表结构定义文件</p></li><li><p>* . MYD -- 数据文件 ( data )</p></li><li><p>* . MYI -- 索引文件 ( index )</p></li><li><p>InnoDB类型数据表只有一个 *.frm文件，以及上一级目录的 ibdata1 文件</p></li><li><p>MyISAM类型数据表对应三个文件：</p></li></ul></li></ul><p><img src="`+c+'" alt=""></p><h3 id="_3、设置数据表字符集" tabindex="-1">3、设置数据表字符集 <a class="header-anchor" href="#_3、设置数据表字符集" aria-label="Permalink to &quot;3、设置数据表字符集&quot;">​</a></h3><p>我们可为数据库、数据表、数据列设定不同的字符集，设定方法：</p><ul><li>创建时通过命令来设置，如：CREATE TABLE 表名() CHARSET = utf8;</li><li>如无设定，则根据 MySQL 数据库配置文件 my.ini 中的参数设定</li></ul><h2 id="七、修改数据库" tabindex="-1">七、修改数据库 <a class="header-anchor" href="#七、修改数据库" aria-label="Permalink to &quot;七、修改数据库&quot;">​</a></h2><h3 id="_1、修改表结构-alter-table" tabindex="-1">1、修改表结构 ( ALTER TABLE ) <a class="header-anchor" href="#_1、修改表结构-alter-table" aria-label="Permalink to &quot;1、修改表结构 ( ALTER TABLE )&quot;">​</a></h3><p>修改表名：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 旧表名 RENAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 新表名</span></span></code></pre></div><p>添加字段：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字段名 列属性 [属性]</span></span></code></pre></div><p>修改字段类型：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MODIFY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字段名 列类型 [属性]</span></span></code></pre></div><p>修改字段名和字段类型（字段类型为必要参数）：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名 CHANGE 旧字段名 新字段名 列属性 [属性]</span></span></code></pre></div><p>删除字段：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字段名</span></span></code></pre></div><h3 id="_2、删除数据表" tabindex="-1">2、删除数据表 <a class="header-anchor" href="#_2、删除数据表" aria-label="Permalink to &quot;2、删除数据表&quot;">​</a></h3><p>语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [IF EXISTS] 表名</span></span></code></pre></div><ul><li>IF EXISTS 为可选，判断是否存在该数据表</li><li>不加 IF EXISTS 的情况下，如果删除不存在的数据表会抛出错误</li></ul><h3 id="_3、其他" tabindex="-1">3、其他 <a class="header-anchor" href="#_3、其他" aria-label="Permalink to &quot;3、其他&quot;">​</a></h3><ol><li>可用反引号（`）为标识符（库名、表名、字段名、索引、别名）包裹，以避免与关键字重名！中文也可以作为标识符！</li><li>每个库目录存在一个保存当前数据库的选项文件db.opt。</li><li>注释： <ul><li>单行注释 # 注释内容</li><li>多行注释 /* 注释内容 */</li><li>单行注释 -- 注释内容 （标准SQL注释风格，要求双破折号后加一空格符（空格、TAB、换行等））</li></ul></li><li>模式通配符： <ul><li>_ 任意单个字符</li><li>% 任意多个字符，甚至包括零字符</li><li>单引号需要进行转义 &#39;</li></ul></li><li>CMD命令行内的语句结束符可以为 &quot;;&quot;, &quot;\\G&quot;, &quot;\\g&quot;，仅影响显示结果。其他地方还是用分号结束。delimiter 可修改当前对话的语句结束符。</li><li>SQL对大小写不敏感 （关键字）</li><li>清除已有语句：\\c</li></ol>',34))])}const T=p(u,[["render",F]]);export{L as __pageData,T as default};
